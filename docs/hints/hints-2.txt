It's almost the same thing as chart 1!!! But small multiples!!!










































You need to evenly space out the pies kind of like you'd evenly space out circles. What kind of scale do you use for that? (no using separate SVGs!)















That scale needs a domain - you can either manually type in the domain or just the .map trick to set the domain after you've read in the data.















the .map trick is how you extract all of one column from your datapoints

    var names = datapoints.map(d => d.name)

and then feed it to your scale to 'teach' it the domain after you've read in data

    scale.domain(names)













You need 4 pie charts, but you have 12 data points. How do you group them together?























This time you do NOT create multiple svg elements - you're going to only have ONE svg element.












Each pie needs to be grouped together in its own element that you can move around. What is that element? How do you move it around if it doesn't have an x and a y?















let's be honest, it's transform/translate. In class we did it like this:

.attr("transform", "translate(200,200)")

but you don't get off so easy! You need to evenly space them out on the x access, which means each one is going to get its own special translate, which means you're going to use your favorite answer









































Once you've made the group objects, you can use .each on them to draw inside of them. When you're inside of .each, you can access the 'g' element with...

var svg = d3.select(this)

and no, it isn't an svg. but we like to call it an svg! You could call it 'container' if you want. Up to you.


















Please be sure to look at 'd' inside of the .each function to remind yourself what your data actually looks like. When you nest things get weird!














If you have too many wedges, it's because you bound datapoints instead of the nested data! Take a look at d in your .each() function to see how you can access just the data for that particular group.


























You can add the labels two different ways: either you add ONE when you're inside of the .each and it automatically does it 4 times, or you do it outside of the .each and add one for each group. I'd work on adding it inside of the .each.
